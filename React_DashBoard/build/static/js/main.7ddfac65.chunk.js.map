{"version":3,"sources":["components/Spinner/index.js","components/Table/index.js","services/ApiService.js","screens/home.js","screens/list.js","index.js"],"names":["Spinner","className","role","React","Component","Table","props","data","index","this","tableHeaders","map","header","value","callback","label","tableData","getTableRow","bind","ApiService","params","Object","assign","page","limit","axios","method","url","orderId","resource","Home","state","isCatalogSummaryLoading","isStoreInfoLoading","catalogSummary","storeInfo","then","handleStoreInfoResponse","handleCatalogSummaryResponse","response","setState","href","domain","format","summaryItem","Intl","NumberFormat","undefined","style","currency","List","isOrdersLoading","orders","pagination","billingAddress","first_name","last_name","orderTotal","badgeClass","status_id","status","type","onClick","e","cancelOrder","id","loadOrders","handleOrdersResponse","length","hasOrders","ReactDOM","render","to","exact","path","component","ListOfThings","document","getElementById"],"mappings":"+MAEaA,EAAb,uKAEI,OACE,qBAAKC,UAAU,cAAf,SACE,qBAAKA,UAAU,qBAAqBC,KAAK,SAAzC,SACE,sBAAMD,UAAU,UAAhB,gCALV,GAA6BE,IAAMC,WCAtBC,EAAb,kDACE,WAAYC,GAAQ,uCACZA,GAFV,wDAKcC,EAAMC,GAChB,OACE,6BACCC,KAAKH,MAAMI,aAAaC,KAAI,SAASC,EAAQJ,GAC5C,IAAIK,EAAQN,EASZ,OARIK,EAAOJ,QACTK,EAAQN,EAAKK,EAAOJ,QAGlBI,EAAOE,WACTD,EAAQD,EAAOE,SAASD,IAGnB,6BAAiBA,GAARL,OAXTA,KAPf,+BAyBI,OACE,wBAAOP,UAAU,QAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,6BAAKQ,KAAKH,MAAMI,aAAaC,KAAI,SAASC,EAAQJ,GAChD,OAAO,6BAAiBI,EAAOG,OAAfP,UAGpB,uBAAOP,UAAU,cAAjB,SACGQ,KAAKH,MAAMU,UAAUL,IAAIF,KAAKQ,YAAYC,KAAKT,gBAjC1D,GAA2BN,IAAMC,W,iBCDpBe,EAAa,SACZC,GAMR,OALAA,EAASC,OAAOC,OAAO,CACrBC,KAAM,EACNC,MAAO,IACNJ,GAEIK,IAAM,CACXC,OAAQ,MACRC,IAAK,oBACLP,YAVKD,EAAa,SAcVS,EAASrB,GACnB,OAAOkB,IAAM,CACXC,OAAQ,MACRC,IAAI,qBAAD,OAAuBC,GAC1BrB,UAlBKY,EAAa,SA0CLU,EAAUT,GACzB,OAAOK,IAAM,CACXC,OAAQ,MACRC,IAAI,WAAD,OAAaE,GAChBT,YC3CaU,E,kDACnB,WAAYxB,GAAQ,IAAD,8BACjB,cAAMA,IAEDyB,MAAQ,CACXC,yBAAyB,EACzBC,oBAAoB,EACpBC,eAAgB,GAChBC,UAAW,IAPI,E,iEAYjBhB,EAA4B,YAAYiB,KAAK3B,KAAK4B,wBAAwBnB,KAAKT,OAC/EU,EAA4B,sBAAsBiB,KAAK3B,KAAK6B,6BAA6BpB,KAAKT,S,8CAGxE8B,GACtB9B,KAAK+B,SAAS,CACZP,oBAAoB,EACpBE,UAAWI,EAAShC,S,mDAIKgC,GAC3B9B,KAAK+B,SAAS,CACZR,yBAAyB,EACzBE,eAAgBK,EAAShC,KAAKA,S,+BAuBhC,OACE,qBAAKN,UAAU,aAAf,SACE,sBAAKA,UAAU,MAAf,UACA,qBAAKA,UAAU,gBAAf,SACI,qBAAKA,UAAU,OAAf,SAGI,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,MAAd,4BACA,mBAAGwC,KAAK,qCAAqCxC,UAAU,oCAAvD,gCAGAQ,KAAKsB,MAAME,mBAEX,cAAC,EAAD,IAEA,kCASE,oBAAIhC,UAAU,iBAAd,SACE,qBAAIA,UAAU,kBAAd,UACE,qBAAKA,UAAU,uCAAf,SACE,oBAAIA,UAAU,OAAd,sBAEF,mBAAGA,UAAU,OAAb,SAAsBQ,KAAKsB,MAAMI,UAAUO,uBAgB7D,qBAAKzC,UAAU,gBAAf,SACI,qBAAKA,UAAU,OAAf,SAGE,sBAAKA,UAAU,YAAf,UACE,iDAEGQ,KAAKsB,MAAME,oBAAsBxB,KAAKsB,MAAMC,wBAE7C,cAAC,EAAD,IAEA,qBAAK/B,UAAU,MAAf,SA5EU,CACtB,CACEc,MAAO,gBACPP,MAAO,gBACPmC,OAAQ,UAEV,CACE5B,MAAO,kBACPP,MAAO,gBACPmC,OAAQ,UAEV,CACE5B,MAAO,kBACPP,MAAO,kBACPmC,OAAQ,aA+DqBhC,IAAI,SAASiC,EAAapC,GACzC,OAAQ,qBAAKP,UAAU,yBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,4CAAd,SACI2C,EAAY7B,QAEhB,sBAAMd,UAAU,UAAhB,SAE2B,aAAvB2C,EAAYD,OAEZ,IAAIE,KAAKC,kBAAaC,EAAW,CAAEC,MAAO,WAAYC,SAAUxC,KAAKsB,MAAMI,UAAUc,WAAYN,OAAOlC,KAAKsB,MAAMG,eAAeU,EAAYpC,QAE9IC,KAAKsB,MAAMG,eAAeU,EAAYpC,mBAdPA,IAsBnDU,KAAKT,yB,GApIKN,IAAMC,W,QCAnB8C,E,kDACnB,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IAEDyB,MAAQ,CACXoB,iBAAiB,EACjBC,OAAQ,CACN7C,KAAM,GACN8C,WAAY,IAEd3C,aACE,CACE,CACEK,MAAO,WACPP,MAAO,KACPM,SAAU,SAASc,GACjB,OAAOA,IAGX,CACEb,MAAO,eACPP,MAAO,kBACPM,SAAU,SAASwC,GACjB,MAAM,GAAN,OAAUA,EAAeC,WAAzB,YAAuCD,EAAeE,aAG1D,CACEzC,MAAO,cACPP,MAAO,gBACPM,SAAU,SAAS2C,GACjB,OAAOA,IAGX,CACE1C,MAAO,eACPD,SAAU,SAASP,GACjB,IAAImD,EAAa,eASjB,OARuB,IAAnBnD,EAAKoD,UACPD,GAAc,SACc,IAAnBnD,EAAKoD,WAAsC,KAAnBpD,EAAKoD,UACtCD,GAAc,UAEdA,GAAc,QAId,sBAAMzD,UAAYyD,EAAlB,SAAiCnD,EAAKqD,WAI5C,CACE7C,MAAO,UACPD,SAAU,SAASP,GAAO,IAAD,OACvB,GAAuB,IAAnBA,EAAKoD,UACP,OACE,wBAAQE,KAAK,SAAS5D,UAAU,iBAAiB6D,QAAS,SAACC,GAAD,OAAO,EAAKC,YAAYzD,EAAK0D,GAAIF,IAA3F,qBAGJ7C,KANQ,mBAnDD,E,iEAgEjBT,KAAKyD,e,mCAIL/C,EAAqB,CACnBK,MAAO,IACNY,KAAK3B,KAAK0D,qBAAqBjD,KAAKT,S,2CAGpB8B,GACnB9B,KAAK+B,SAAS,CACZW,iBAAiB,EACjBC,OAAQ,CACN7C,KAAMgC,EAAShC,U,kCAKTqB,GAGVnB,KAAK+B,SAAS,CACZW,iBAAiB,IAGnBhC,EAAuBS,EANH,CAAE+B,UAAW,IAOhCvB,KAAK3B,KAAKyD,WAAWhD,KAAKT,S,kCAI3B,OAAQA,KAAKsB,MAAMqB,OAAO7C,KAAK6D,OAAS,I,+BAIxC,OACE,qBAAKnE,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,sCAAf,yBAEA,qBAAKA,UAAU,YAAf,SAEIQ,KAAKsB,MAAMoB,gBAEX,cAAC,EAAD,IAEA1C,KAAK4D,YAEL,kCACE,cAAC,EAAD,CAAO3D,aAAcD,KAAKsB,MAAMrB,aAAcM,UAAWP,KAAKsB,MAAMqB,OAAO7C,SAG7E,kCACE,qBAAKN,UAAU,aAAf,mD,GAvHYE,IAAMC,WCMxCkE,IAASC,OACP,cAAC,IAAD,UACE,gCACE,qBAAKtE,UAAU,wBAAf,SACE,qBAAIA,UAAU,gBAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,sBAAsBuE,GAAG,IAAzC,oBAEF,oBAAIvE,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,sBAAsBuE,GAAG,QAAzC,yBAKN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAYC,IACtC,cAAC,IAAD,CAAOD,UAAY7C,YAIxB+C,SAASC,eAAe,W","file":"static/js/main.7ddfac65.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Spinner extends React.Component {\n  render() {\n    return (\n      <div className=\"text-center\">\n        <div className=\"spinner-border m-5\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nexport class Table extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getTableRow(data, index) {\n    return (\n      <tr key={index}>\n      {this.props.tableHeaders.map(function(header, index) {\n        let value = data;\n        if (header.index) {\n          value = data[header.index];\n        }\n\n        if (header.callback) {\n          value = header.callback(value);\n        }\n\n        return <td key={index}>{value}</td>\n      })}\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <table className=\"table\">\n        <thead className=\"table-thead\">\n          <tr>{this.props.tableHeaders.map(function(header, index) {\n            return <td key={index}>{header.label}</td>;\n          })}</tr>\n        </thead>\n        <tbody className=\"table-tbody\">\n          {this.props.tableData.map(this.getTableRow.bind(this))}\n        </tbody>\n      </table>\n    );\n  }\n}","import axios from 'axios'\nexport const ApiService = {\n    getOrders(params) {\n      params = Object.assign({\n        page: 1,\n        limit: 10,\n      }, params);\n  \n      return axios({\n        method: 'get',\n        url: '/bc-api/v2/orders',\n        params,\n      });\n    },\n  \n    updateOrder(orderId, data) {\n      return axios({\n        method: 'put',\n        url: `/bc-api/v2/orders/${orderId}`,\n        data,\n      });\n    },\n  \n    deleteOrder(orderId) {\n      return axios({\n        method: 'delete',\n        url: `/bc-api/v2/orders/${orderId}`,\n      });\n    },\n  \n    getResourceCollection(resource, params) {\n      params = Object.assign({\n        page: 1,\n        limit: 10,\n      }, params);\n  \n      return axios({\n        method: 'get',\n        url: `/bc-api/${resource}`,\n        params,\n      });\n    },\n  \n    getResourceEntry(resource, params) {\n      return axios({\n        method: 'get',\n        url: `/bc-api/${resource}`,\n        params,\n      });\n    },\n  \n    updateResourceEntry(resource, data) {\n      return axios({\n        method: 'put',\n        url: `/bc-api/${resource}`,\n        data,\n      });\n    },\n  \n    deleteResourceEntry(resource, data) {\n      return axios({\n        method: 'delete',\n        url: `/bc-api/${resource}`,\n      });\n    },\n  };","import React from 'react';\nimport {Spinner} from '../components';\nimport {ApiService} from '../services/ApiService';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isCatalogSummaryLoading: true,\n      isStoreInfoLoading: true,\n      catalogSummary: {},\n      storeInfo: {},\n    };\n  }\n\n  componentWillMount() {\n    ApiService.getResourceEntry('v2/store').then(this.handleStoreInfoResponse.bind(this));\n    ApiService.getResourceEntry('v3/catalog/summary').then(this.handleCatalogSummaryResponse.bind(this));\n  }\n\n  handleStoreInfoResponse(response) {\n    this.setState({\n      isStoreInfoLoading: false,\n      storeInfo: response.data,\n    });\n  }\n\n  handleCatalogSummaryResponse(response) {\n    this.setState({\n      isCatalogSummaryLoading: false,\n      catalogSummary: response.data.data,\n    });\n  }\n\n  render() {\n    const fieldsInSummary = [\n      {\n        label: \"Variant Count\",\n        index: \"variant_count\",\n        format: \"number\",\n      },\n      {\n        label: \"Inventory Count\",\n        index: \"variant_count\",\n        format: \"number\",\n      },\n      {\n        label: \"Inventory Value\",\n        index: \"inventory_value\",\n        format: \"currency\",\n      },\n    ];\n\n    return (\n      <div className=\"container \">\n        <div className=\"row\">\n        <div className=\"col-md-12 m-3\">\n            <div className=\"card\">\n                {/* <div className=\"card-header\">Store Overview</div> */}\n\n                <div className=\"card-body\">\n                  <div className='row'>\n                    <h4 className='col'>Store Overview</h4>\n                    <a href='{ this.state.storeInfo.secure_url}' className='col-md-3 btn  btn-outline-primary'>View Storefront</a>\n                  </div>\n                  {\n                    this.state.isStoreInfoLoading\n                    ? \n                    <Spinner/>\n                    : \n                    <section>\n                      {/* { \n                        this.state.storeInfo.logo.url\n                        ? \n                        <img src={ this.state.storeInfo.logo.url } className=\"img-fluid img-thumbnail\" />\n                        : \n                        <h5>{ this.state.storeInfo.name }</h5>\n                      } */}\n\n                      <ul className=\"list-group m-3\">\n                        <li className=\"list-group-item\">\n                          <div className=\"d-flex w-100 justify-content-between\">\n                            <h5 className=\"mb-1\">Domain</h5>\n                          </div>\n                          <p className=\"mb-1\">{ this.state.storeInfo.domain }</p>\n                        </li>\n                        {/* <li className=\"list-group-item\">\n                          <div className=\"d-flex w-100 justify-content-between\">\n                            <h5 className=\"mb-1\">Secure URL</h5>\n                          </div>\n                          <p className=\"mb-1\">{ this.state.storeInfo.secure_url }</p>\n                        </li> */}\n \n                      </ul>\n\n                    </section>\n                }\n                </div>\n            </div>\n          </div>\n        <div className=\"col-md-12 m-3\">\n            <div className=\"card\">\n              {/* <div className=\"card-header\">Catalog Summary</div> */}\n\n              <div className=\"card-body\">\n                <h4>Catalog Summary</h4>\n                {\n                  (this.state.isStoreInfoLoading || this.state.isCatalogSummaryLoading)\n                  ?\n                  <Spinner/>\n                  :\n                  <div className=\"row\">\n                    {fieldsInSummary.map(function(summaryItem, index) {\n                      return  <div className=\"col-12 col-lg-6 col-xl\" key={index}>\n                                <div className=\"card\">\n                                  <div className=\"card-body\">\n                                    <div className=\"row align-items-center\">\n                                      <div className=\"col\">\n                                        <h6 className=\"card-title text-uppercase text-muted mb-2\">\n                                          { summaryItem.label }\n                                        </h6>\n                                        <span className=\"h2 mb-0\">\n                                          { \n                                            summaryItem.format === 'currency'\n                                            ?\n                                            new Intl.NumberFormat(undefined, { style: 'currency', currency: this.state.storeInfo.currency }).format(this.state.catalogSummary[summaryItem.index])\n                                            :\n                                            this.state.catalogSummary[summaryItem.index]\n                                          }\n                                        </span>\n                                      </div>\n                                    </div> \n                                  </div>\n                                </div>\n                              </div>\n                      }.bind(this))}\n                  </div>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport {Spinner, Table} from '../components';\nimport {ApiService} from '../services/ApiService';\n\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOrdersLoading: true,\n      orders: {\n        data: [],\n        pagination: {},\n      },\n      tableHeaders:\n        [\n          {\n            label: \"Order ID\",\n            index: \"id\",\n            callback: function(orderId) {\n              return orderId;\n            },\n          },\n          {\n            label: \"Billing Name\",\n            index: \"billing_address\",\n            callback: function(billingAddress) {\n              return `${billingAddress.first_name} ${billingAddress.last_name}`;\n            },\n          },\n          {\n            label: \"Order Total\",\n            index: \"total_inc_tax\",\n            callback: function(orderTotal) {\n              return orderTotal;\n            },\n          },\n          {\n            label: \"Order Status\",\n            callback: function(data) {\n              let badgeClass = 'badge badge-';\n              if (data.status_id === 5) {\n                badgeClass += 'danger';\n              } else if (data.status_id === 2 || data.status_id === 10) {\n                badgeClass += 'success';\n              } else {\n                badgeClass += 'light';\n              }\n\n              return (\n                <span className={ badgeClass }>{ data.status }</span>\n              );\n            },\n          },\n          {\n            label: \"Actions\",\n            callback: function(data) {\n              if (data.status_id !== 5) {\n                return (\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={(e) => this.cancelOrder(data.id, e)}>Cancel</button>\n                );\n              }\n            }.bind(this),\n          },\n        ],\n    };\n  }\n\n  componentWillMount() {\n    this.loadOrders();\n  }\n\n  loadOrders() {\n    ApiService.getOrders({\n      limit: 5\n    }).then(this.handleOrdersResponse.bind(this));\n  }\n\n  handleOrdersResponse(response) {\n    this.setState({\n      isOrdersLoading: false,\n      orders: {\n        data: response.data\n      }\n    });\n  }\n\n  cancelOrder(orderId) {\n  \tconst newOrderData = { status_id: 5 };\n\n    this.setState({\n      isOrdersLoading: true,\n    });\n  \t\n    ApiService.updateOrder(orderId, newOrderData)\n    .then(this.loadOrders.bind(this));\n  }\n\n  hasOrders() {\n    return (this.state.orders.data.length > 0);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"card\">\n                <div className=\"card-header bg-secondary text-white\">List Orders</div>\n\n                <div className=\"card-body\">\n                  {\n                    this.state.isOrdersLoading\n                    ? \n                    <Spinner/>\n                    :\n                    this.hasOrders()\n                    ? \n                    <section>\n                      <Table tableHeaders={this.state.tableHeaders} tableData={this.state.orders.data} />\n                    </section>\n                    : \n                    <section>\n                      <div className=\"emptyTable\">No orders exist yet!</div>\n                    </section>\n                  }\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\n\nimport Home from './screens/home';\nimport ListOfThings from './screens/list';\n\nReactDOM.render((\n  <BrowserRouter>\n    <div>\n      <nav className=\"container  bg-primary\">\n        <ul className=\"nav mt-2 mb-2\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/\">Home</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link text-white\" to=\"/list\">List</Link>\n          </li>\n        </ul>\n      </nav>\n    \n      <Switch>\n        <Route exact path=\"/list\" component={ ListOfThings } />\n        <Route component={ Home } />\n      </Switch>\n    </div>\n  </BrowserRouter>\n), document.getElementById('root'));"],"sourceRoot":""}