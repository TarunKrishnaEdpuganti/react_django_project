{"version":3,"sources":["components/loader.jsx","components/orderList.jsx","components/summary.jsx","components/layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","React","Component","alertsManager","createAlertsManager","OrderList","useState","currentPage","setCurrentPage","itemsPerPageOptions","itemsPerPage","setItemsPerPage","currentItems","setCurrentItems","loading","setLoading","data","setList","DeleteAlert","title","details","type","alert","header","messages","text","onClose","autoDismiss","add","AddAlert","DeleteButton","id","is_deleted","isOpen","setIsOpen","Button","onClick","variant","actionType","Modal","actions","orderId","fetch","method","headers","then","closeOnEscKey","closeOnClickOutside","columns","hash","render","billing_address","first_name","last_name","total_tax","custom_status","body","JSON","stringify","status_id","useEffect","json","items","maxItems","lastItem","Math","min","length","firstItem","max","slice","AlertsManager","manager","Panel","Table","keyField","itemName","pagination","totalItems","onPageChange","onItemsPerPageChange","newRange","stickyHeader","Summary","store","setStore","catalog","setCatalog","foo","action","window","open","secure_url","domain","Flex","justifyContent","variant_count","inventory_count","inventory_value","Layout","activeTab","setActiveTab","style","Tabs","onTabClick","Box","marginTop","App","GlobalStyles","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5eae5935.chunk.js","sourcesContent":["import React from 'react';\nimport './loader.css'\n\nexport default class Loader extends React.Component {\n  render() {\n    return (\n      <div className=\"loader\"></div>\n    );\n  }\n}","import { Button, Table, Panel, Modal , Text, createAlertsManager , AlertsManager } from \"@bigcommerce/big-design\";\nimport { useState, useEffect } from \"react\";\nimport Loader from \"./loader\";\n\nconst alertsManager = createAlertsManager()\n\nfunction getList() {\n    return fetch(`/bc-api/v2/orders`)\n    .then(data => data.json())\n} \n\nfunction orderUpdate(orderId){\n  return fetch(`/bc-api/v2/orders/${orderId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ status_id: 5 }),\n  })\n}\n\nfunction orderDelete(orderId){\n  return fetch(`/bc-api/v2/orders/${orderId}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n}\n\n\nfunction AddAlert(title, details, type) {\n  const alert = {\n    header: title,\n    messages: [\n      {\n        text: details,\n      },\n    ],\n    type: type,\n    onClose: () => null,\n    autoDismiss: true\n  }\n  return(alertsManager.add(alert))\n}\n\n\nfunction OrderList() {\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPageOptions] = useState([5, 10, 20, 30]);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentItems, setCurrentItems] = useState([]);\n  const [loading, setLoading] = useState(true)\n  const [data, setList] = useState([]);\n\n\n  function DeleteAlert(){\n    AddAlert('Order Delete', 'Order Has Been Deleted Successfully!', 'success')\n  }\n\n  function DeleteButton(id ,is_deleted) {\n    const [isOpen, setIsOpen] = useState(false);\n\n    if(!is_deleted){\n    \n      return (\n        // <Button variant=\"subtle\" actionType=\"destructive\" onClick={() => orderUpdate(id).then(setLoading(true))} >Cancel</Button>\n      <>\n        <Button onClick={() => setIsOpen(true)} variant=\"subtle\" actionType=\"destructive\">Delete Order</Button>\n\n        <Modal\n          actions={[\n            { text: 'Cancel', variant: 'subtle', onClick: () => setIsOpen(false) },\n            { text: 'Delete', onClick: () =>  orderDelete(id).then(setIsOpen(false)).then(setLoading(true)).then(DeleteAlert())},\n          ]}\n          header=\"Dialog Title\"\n          isOpen={isOpen}\n          onClose={() => setIsOpen(false)}\n          closeOnEscKey={true}\n          closeOnClickOutside={false}\n          variant=\"dialog\"\n        >\n          <Text>\n          Do you really want to delete order with id #{id} ?\n          </Text>\n        </Modal>\n      </>\n\n\n      )\n    }\n    else{\n      return <div>Order Deleted</div>\n    }\n  }\n\n  \n    \n\n  const columns=[\n      { header: 'Order Id', hash: 'id', render: ({ id }) => id },\n      { header: 'Billing Name', hash: 'billing_address', render: ({ billing_address }) =>`${ billing_address.first_name} ${billing_address.last_name}` },\n      { header: 'Order Total', hash: 'total_tax', render: ({ total_tax }) => total_tax },\n      { header: 'Order Status', hash: 'custom_status', render: ({ custom_status }) => custom_status },\n      { header: '', hash: 'stock', render: ({ id }) => <Button actionType=\"destructive\" onClick={() => orderUpdate(id).then(setLoading(true))} >Cancel</Button> },\n      { header: '', hash: 'stockmm', render: ({ id , is_deleted}) => DeleteButton(id , is_deleted)  },\n    ]\n\n        \n\n  const onItemsPerPageChange = (newRange) => {\n    setCurrentPage(1);\n    setItemsPerPage(newRange);\n  };\n\n\n  useEffect(() => {\n  getList().then(items => {\n      setList(items);\n      const maxItems = currentPage * itemsPerPage;\n      const lastItem = Math.min(maxItems, items.length);\n      const firstItem = Math.max(0, maxItems - itemsPerPage);\n      setCurrentItems(items.slice(firstItem, lastItem));\n  }).then(() => setLoading(false))\n  }, [currentPage, itemsPerPage, loading]);\n\n  return (\n    <>\n    <AlertsManager manager={alertsManager} />\n    {\n      loading ? <Loader />\n        :\n      <Panel header=\"Orders \">\n        <Table\n          keyField=\"sku\"\n          columns={columns}\n          items={currentItems}\n          itemName=\"Orders\"\n          pagination={{\n            currentPage,\n            totalItems: data.length,\n            onPageChange: setCurrentPage,\n            itemsPerPageOptions,\n            onItemsPerPageChange,\n            itemsPerPage,\n          }}\n          stickyHeader\n        />\n      </Panel>\n    }\n  </>\n  \n  );}\n  \n\n  export default OrderList;","import { Panel, Text, Flex, H2 } from \"@bigcommerce/big-design\";\nimport { useState, useEffect } from \"react\";\nimport Loader from \"./loader\";\n\nfunction getStore() {\n    return fetch('/bc-api/v2/store')\n      .then(store => store.json())\n} \n\nfunction getCatalog() {\n    return fetch('/bc-api/v3/catalog/summary')\n      .then(store => store.json())\n} \n\n\n\nexport default function  Summary() {\n    const [store, setStore] = useState([]);\n    const [catalog, setCatalog] = useState([]);\n\n\n    useEffect(() => {\n        getStore().then(foo => {\n            setStore(foo);\n            // console.log(foo)\n\n        })\n\n\n        getCatalog().then(foo => {\n            setCatalog(foo);\n            // console.log(foo)\n        })\n\n    }, [store.id, catalog.id])\n\n    return(\n        <>\n        { store.length  === 0 ? \n            <Loader />\n            :\n            <Panel\n            header=\"Stor Overview\"\n            action={{\n            variant: 'secondary',\n            text: 'View Storefront',\n            onClick: () => {\n                window.open(store.secure_url)\n            },\n            }}\n            >\n            <Panel>\n                <Text>Domain</Text>\n                {store.domain}\n            </Panel>\n            </Panel>\n            }\n\n            { catalog.data &&\n\n            <Panel header=\"Catalog Summary\">\n                <Flex justifyContent='space-between'>\n                    <Panel>\n                        <Text>VARIANT COUNT</Text>\n                        <H2>{catalog.data.variant_count}</H2>\n                    </Panel>\n                    <Panel>\n                        <Text>INVENTORY COUNT</Text>\n                        <H2>{catalog.data.inventory_count}</H2>\n                    </Panel>\n                    <Panel>\n                        <Text>INVENTORY VALUE</Text>\n                        <H2>{catalog.data.inventory_value}</H2>\n                    </Panel>\n                </Flex>\n            </Panel> \n \n            }\n        </>\n    )\n}","import { Tabs, Box, H0 } from \"@bigcommerce/big-design\";\nimport { useState } from \"react\";\nimport OrderList from \"./orderList\";\nimport Summary from \"./summary\";\n\n\n\n\nfunction  Layout() {\n  const [activeTab, setActiveTab] = useState('tab1');\n\n  const items = [\n    { id: 'tab1', title: 'Summary' },\n    { id: 'tab2', title: 'Order List' },      \n  ];\n\n  return (\n    <div style={{'margin': '2% 25%'}}>\n      <H0>Inventory Management App</H0>\n      <Tabs activeTab={activeTab} items={items} onTabClick={setActiveTab} />\n      <Box marginTop=\"large\">\n        {activeTab === 'tab1' && <Summary />}\n        {activeTab === 'tab2' && <OrderList />}\n      </Box>\n    </div>\n  );\n}\n\nexport default Layout","import {  GlobalStyles } from '@bigcommerce/big-design';\nimport Layout from './components/layout'\n\nfunction App() {\n  return (\n    <>\n    <GlobalStyles />\n    <Layout />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}