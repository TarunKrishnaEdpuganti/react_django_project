{"version":3,"sources":["components/Spinner/index.js","components/Table/index.js","services/ApiService.js","screens/home.js","screens/list.js","index.js"],"names":["Spinner","className","role","React","Component","Table","props","data","index","this","tableHeaders","map","header","value","callback","indexOfLastPage","currentPage","rowPerPage","indexOfFirstPage","paginated","tableData","slice","style","background","label","getTableRow","bind","ApiService","params","Object","assign","page","limit","axios","method","url","orderId","resource","Home","state","isCatalogSummaryLoading","isStoreInfoLoading","catalogSummary","storeInfo","then","handleStoreInfoResponse","handleCatalogSummaryResponse","response","setState","Button","href","secure_url","domain","format","summaryItem","Intl","NumberFormat","undefined","currency","List","paginateplus","pageNumber","orders","length","paginateminus","isOrdersLoading","pagination","billingAddress","first_name","last_name","orderTotal","badgeClass","status_id","status","type","onClick","e","cancelOrder","id","loadOrders","handleOrdersResponse","console","log","display","alignItems","cursor","marginLeft","hasOrders","striped","bordered","hover","ReactDOM","render","borderColor","activeClassName","exact","to","path","component","ListOfThings","document","getElementById"],"mappings":"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","file":"static/js/main.33078bf3.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Spinner extends React.Component {\n  render() {\n    return (\n      <div className=\"text-center\">\n        <div className=\"spinner-border m-5\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nexport class Table extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n\n  getTableRow(data, index) {\n    return (\n      <tr key={index}>\n      {this.props.tableHeaders.map(function(header, index) {\n        let value = data;\n        if (header.index) {\n          value = data[header.index];\n        }\n\n        if (header.callback) {\n          value = header.callback(value);\n        }\n\n        return <td key={index}>{value}</td>\n      })}\n      </tr>\n    );\n  }\n\n  \n  \n\n  render() {\n\n    \n    // Get current Pages\n    const indexOfLastPage = this.props.currentPage * this.props.rowPerPage;\n    const indexOfFirstPage = indexOfLastPage - this.props.rowPerPage;\n    const paginated = this.props.tableData.slice(indexOfFirstPage, indexOfLastPage);\n\n\n    return (\n      <table className=\"table\">\n        <thead className=\"table-thead\" style={{background: '#f3f3f3'}}>\n          <tr>{this.props.tableHeaders.map(function(header, index) {\n            return <td key={index}>{header.label}</td>;\n          })}</tr>\n        </thead>\n        <tbody className=\"table-tbody\">\n          {paginated.map(this.getTableRow.bind(this))}\n        </tbody>\n      </table>\n    );\n  }\n}","import axios from 'axios'\nexport const ApiService = {\n    getOrders(params) {\n      params = Object.assign({\n        page: 1,\n        limit: 10,\n      }, params);\n  \n      return axios({\n        method: 'get',\n        url: '/bc-api/v2/orders',\n        params,\n      });\n    },\n  \n    updateOrder(orderId, data) {\n      return axios({\n        method: 'put',\n        url: `/bc-api/v2/orders/${orderId}`,\n        data,\n      });\n    },\n  \n    deleteOrder(orderId) {\n      return axios({\n        method: 'delete',\n        url: `/bc-api/v2/orders/${orderId}`,\n      });\n    },\n  \n    getResourceCollection(resource, params) {\n      params = Object.assign({\n        page: 1,\n        limit: 10,\n      }, params);\n  \n      return axios({\n        method: 'get',\n        url: `/bc-api/${resource}`,\n        params,\n      });\n    },\n  \n    getResourceEntry(resource, params) {\n      return axios({\n        method: 'get',\n        url: `/bc-api/${resource}`,\n        params,\n      });\n    },\n  \n    updateResourceEntry(resource, data) {\n      return axios({\n        method: 'put',\n        url: `/bc-api/${resource}`,\n        data,\n      });\n    },\n  \n    deleteResourceEntry(resource, data) {\n      return axios({\n        method: 'delete',\n        url: `/bc-api/${resource}`,\n      });\n    },\n  };","import React from 'react';\nimport {Spinner} from '../components';\nimport {ApiService} from '../services/ApiService';\nimport { Button } from '@bigcommerce/big-design';\n\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isCatalogSummaryLoading: true,\n      isStoreInfoLoading: true,\n      catalogSummary: {},\n      storeInfo: {},\n    };\n  }\n\n  componentWillMount() {\n    ApiService.getResourceEntry('v2/store').then(this.handleStoreInfoResponse.bind(this));\n    ApiService.getResourceEntry('v3/catalog/summary').then(this.handleCatalogSummaryResponse.bind(this));\n  }\n\n  handleStoreInfoResponse(response) {\n    this.setState({\n      isStoreInfoLoading: false,\n      storeInfo: response.data,\n    });\n  }\n\n  handleCatalogSummaryResponse(response) {\n    this.setState({\n      isCatalogSummaryLoading: false,\n      catalogSummary: response.data.data,\n    });\n  }\n\n  render() {\n    const fieldsInSummary = [\n      {\n        label: \"Variant Count\",\n        index: \"variant_count\",\n        format: \"number\",\n      },\n      {\n        label: \"Inventory Count\",\n        index: \"variant_count\",\n        format: \"number\",\n      },\n      {\n        label: \"Inventory Value\",\n        index: \"inventory_value\",\n        format: \"currency\",\n      },\n    ];\n\n    return (\n      <div className=\"container \">\n        <div className=\"row\">\n        <div className=\"col-md-12 m-3\">\n            <div className=\"card\">\n                {/* <div className=\"card-header\">Store Overview</div> */}\n\n                <div className=\"card-body\">\n                  <div className='row'>\n                    <h4 className='col'>Store Overview</h4>\n                    {\n                  (this.state.isStoreInfoLoading || this.state.isCatalogSummaryLoading)\n                  ? \n                  <></>\n                  :\n                  <Button href= {this.state.storeInfo.secure_url} className='col-md-3 mr-5 '>View Storefront</Button> \n                  }\n                  {/* <Button href= {this.state.storeInfo.secure_url} className='col-md-3' style={{marginRight: '10px'}}>View Storefront</Button>  */}\n\n                  </div>\n                  \n                   <div className='row'>\n                    <h7 className=\"col\">A view into your default BigCommerce storefront</h7>\n                  </div>\n                  {\n                    this.state.isStoreInfoLoading\n                    ? \n                    <Spinner/>\n                    : \n                    <section>\n                      {/* { \n                        this.state.storeInfo.logo.url\n                        ? \n                        <img src={ this.state.storeInfo.logo.url } className=\"img-fluid img-thumbnail\" />\n                        : \n                        <h5>{ this.state.storeInfo.name }</h5>\n                      } */}\n\n                      <ul className=\"list-group m-3\">\n                        <li className=\"list-group-item\">\n                          <div className=\"d-flex w-100 justify-content-between\">\n                            <h5 className=\"mb-1\">Domain</h5>\n                          </div>\n                          <p className=\"mb-1\">{ this.state.storeInfo.domain }</p>\n                        </li>\n                        {/* <li className=\"list-group-item\">\n                          <div className=\"d-flex w-100 justify-content-between\">\n                            <h5 className=\"mb-1\">Secure URL</h5>\n                          </div>\n                          <p className=\"mb-1\">{ this.state.storeInfo.secure_url }</p>\n                        </li> */}\n \n                      </ul>\n\n                    </section>\n                }\n                </div>\n            </div>\n          </div>\n        <div className=\"col-md-12 m-3\">\n            <div className=\"card\">\n              {/* <div className=\"card-header\">Catalog Summary</div> */}\n\n              <div className=\"card-body\">\n                <h4>Catalog Summary</h4>\n                <h7>A simple Overview of your Catalog</h7>\n\n                {\n                  (this.state.isStoreInfoLoading || this.state.isCatalogSummaryLoading)\n                  ?\n                  <Spinner/>\n                  :\n                  <div className=\"row\">\n                    {fieldsInSummary.map(function(summaryItem, index) {\n                      return  <div className=\"col-12 col-lg-6 col-xl\" key={index}>\n                                <div className=\"card\">\n                                  <div className=\"card-body\">\n                                    <div className=\"row align-items-center\">\n                                      <div className=\"col\">\n                                        <h6 className=\"card-title text-uppercase text-muted mb-2\">\n                                          { summaryItem.label }\n                                        </h6>\n                                        <span className=\"h2 mb-0\">\n                                          { \n                                            summaryItem.format === 'currency'\n                                            ?\n                                            new Intl.NumberFormat(undefined, { style: 'currency', currency: this.state.storeInfo.currency }).format(this.state.catalogSummary[summaryItem.index])\n                                            :\n                                            this.state.catalogSummary[summaryItem.index]\n                                          }\n                                        </span>\n                                      </div>\n                                    </div> \n                                  </div>\n                                </div>\n                              </div>\n                      }.bind(this))}\n                  </div>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport {Spinner, Table} from '../components';\nimport {ApiService} from '../services/ApiService';\n\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOrdersLoading: true,\n      currentPage : 1,\n      rowPerPage : 3,\n      orders: {\n        data: [],\n        pagination: {},\n      },\n      tableHeaders:\n        [\n          {\n            label: \"Order ID\",\n            index: \"id\",\n            callback: function(orderId) {\n              return orderId;\n            },\n          },\n          {\n            label: \"Billing Name\",\n            index: \"billing_address\",\n            callback: function(billingAddress) {\n              return `${billingAddress.first_name} ${billingAddress.last_name}`;\n            },\n          },\n          {\n            label: \"Order Total\",\n            index: \"total_inc_tax\",\n            callback: function(orderTotal) {\n              return orderTotal;\n            },\n          },\n          {\n            label: \"Order Status\",\n            callback: function(data) {\n              let badgeClass = 'badge badge-';\n              if (data.status_id === 5) {\n                badgeClass += 'danger';\n              } else if (data.status_id === 2 || data.status_id === 10) {\n                badgeClass += 'success';\n              } else {\n                badgeClass += 'light';\n              }\n\n              return (\n                <span className={ badgeClass }>{ data.status }</span>\n              );\n            },\n          },\n          {\n            label: \"Actions\",\n            callback: function(data) {\n              if (data.status_id !== 5) {\n                return (\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={(e) => this.cancelOrder(data.id, e)}>Cancel</button>\n                );\n              }\n            }.bind(this),\n          },\n        ],\n    };\n  }\n\n  componentWillMount() {\n    this.loadOrders();\n  }\n\n  loadOrders() {\n    ApiService.getOrders({\n      limit: 5\n    }).then(this.handleOrdersResponse.bind(this));\n  }\n\n  handleOrdersResponse(response) {\n    this.setState({\n      isOrdersLoading: false,\n      orders: {\n        data: response.data\n      }\n    });\n  }\n\n\n  cancelOrder(orderId) {\n  \tconst newOrderData = { status_id: 5 };\n\n    this.setState({\n      isOrdersLoading: true,\n    });\n  \t\n    ApiService.updateOrder(orderId, newOrderData)\n    .then(this.loadOrders.bind(this));\n  }\n\n  hasOrders() {\n    return (this.state.orders.data.length > 0);\n  }\n\n  paginateplus = (pageNumber) => {\n    if(this.state.orders.data.length > this.state.currentPage * this.state.rowPerPage ){\n      this.setState({currentPage : this.state.currentPage+1})\n  }\n};\n  paginateminus = (pageNumber) => {\n    if( this.state.currentPage > 1){\n      this.setState({currentPage : this.state.currentPage-1})\n      }\n  };\n\n\n\n  componentDidUpdate(){\n    console.log(this.state.currentPage)\n  }\n\n  render() {\n\n    const indexOfLastPage = this.state.currentPage * this.state.rowPerPage;\n    const indexOfFirstPage = indexOfLastPage - this.state.rowPerPage;\n\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"card\">\n                <h4 className=\"m-4 mb-3\">Orders</h4>\n                {\n                  this.state.isOrdersLoading\n                  ? \n                  <></>\n                  :\n                  <></>\n                }\n                  <div className='row'>\n                    <div className='col-md-9'>\n                    <h5 className=\"m-4\">{this.state.orders.data.length } Orders</h5>\n                    </div>\n                    <div className='col-md-3' style={{display: 'flex', alignItems: 'center'}}>\n                        <h5>{indexOfFirstPage +1} - {this.state.orders.data.length <= indexOfLastPage ?  this.state.orders.data.length : indexOfLastPage } of {this.state.orders.data.length }</h5>\n                          <h5 style={{cursor: 'pointer', marginLeft: '15px'}} onClick={() => this.paginateminus()}> {\"<\"}  </h5>\n                          <h5 style={{cursor: 'pointer', marginLeft: '15px'}} onClick={() => this.paginateplus()}> {\">\"}  </h5>\n                    </div>\n                  </div> \n\n                <div className=\"card-body\">\n                  {\n                    this.state.isOrdersLoading\n                    ? \n                    <Spinner/>\n                    :\n                    this.hasOrders()\n                    ? \n                    <section>\n                      <Table striped bordered hover\n                      tableHeaders={this.state.tableHeaders}\n                      tableData={this.state.orders.data}\n                      rowPerPage={this.state.rowPerPage}\n                      currentPage={this.state.currentPage}\n                    />\n                    </section>\n                    : \n                    <section>\n                      <div className=\"emptyTable\">No orders exist yet!</div>\n                    </section>\n                    }\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\n\n\n\nimport Home from './screens/home';\nimport ListOfThings from './screens/list';\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');\n</style>\n\n\n\n\nReactDOM.render((\n  <BrowserRouter>\n    <div>\n      <nav className=\"container\" style={{borderColor: '#f3f3f3'}}>\n      <h3 className='mt-5 ml-4'>Sample App</h3>\n\n        <ul className=\"nav mt-2 mb-2 ml-4\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" activeClassName='navgalink' exact to=\"/\" >Summary</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\"  activeClassName='navgalink' exact to=\"/list\">Orders list</NavLink>\n          </li>\n        </ul>\n      </nav>\n    \n      <Switch>\n        <Route exact path=\"/list\" component={ ListOfThings } />\n        <Route component={ Home } />\n      </Switch>\n    </div>\n  </BrowserRouter>\n), document.getElementById('root'));"],"sourceRoot":""}