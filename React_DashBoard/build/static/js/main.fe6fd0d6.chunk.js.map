{"version":3,"sources":["components/Spinner/index.js","components/Table/index.js","services/ApiService.js","screens/home.js","screens/list.js","index.js"],"names":["Spinner","className","role","React","Component","Table","props","data","index","this","tableHeaders","map","header","value","callback","style","background","label","tableData","getTableRow","bind","ApiService","params","Object","assign","page","limit","axios","method","url","orderId","resource","Home","state","isCatalogSummaryLoading","isStoreInfoLoading","catalogSummary","storeInfo","then","handleStoreInfoResponse","handleCatalogSummaryResponse","response","setState","href","secure_url","domain","format","summaryItem","Intl","NumberFormat","undefined","currency","List","isOrdersLoading","orders","pagination","billingAddress","first_name","last_name","orderTotal","badgeClass","status_id","status","type","onClick","e","cancelOrder","id","loadOrders","handleOrdersResponse","length","hasOrders","striped","bordered","hover","ReactDOM","render","borderColor","activeClassName","exact","to","path","component","ListOfThings","document","getElementById"],"mappings":"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","file":"static/js/main.fe6fd0d6.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Spinner extends React.Component {\n  render() {\n    return (\n      <div className=\"text-center\">\n        <div className=\"spinner-border m-5\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nexport class Table extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getTableRow(data, index) {\n    return (\n      <tr key={index}>\n      {this.props.tableHeaders.map(function(header, index) {\n        let value = data;\n        if (header.index) {\n          value = data[header.index];\n        }\n\n        if (header.callback) {\n          value = header.callback(value);\n        }\n\n        return <td key={index}>{value}</td>\n      })}\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <table className=\"table\">\n        <thead className=\"table-thead\" style={{background: '#f3f3f3'}}>\n          <tr>{this.props.tableHeaders.map(function(header, index) {\n            return <td key={index}>{header.label}</td>;\n          })}</tr>\n        </thead>\n        <tbody className=\"table-tbody\">\n          {this.props.tableData.map(this.getTableRow.bind(this))}\n        </tbody>\n      </table>\n    );\n  }\n}","import axios from 'axios'\nexport const ApiService = {\n    getOrders(params) {\n      params = Object.assign({\n        page: 1,\n        limit: 10,\n      }, params);\n  \n      return axios({\n        method: 'get',\n        url: '/bc-api/v2/orders',\n        params,\n      });\n    },\n  \n    updateOrder(orderId, data) {\n      return axios({\n        method: 'put',\n        url: `/bc-api/v2/orders/${orderId}`,\n        data,\n      });\n    },\n  \n    deleteOrder(orderId) {\n      return axios({\n        method: 'delete',\n        url: `/bc-api/v2/orders/${orderId}`,\n      });\n    },\n  \n    getResourceCollection(resource, params) {\n      params = Object.assign({\n        page: 1,\n        limit: 10,\n      }, params);\n  \n      return axios({\n        method: 'get',\n        url: `/bc-api/${resource}`,\n        params,\n      });\n    },\n  \n    getResourceEntry(resource, params) {\n      return axios({\n        method: 'get',\n        url: `/bc-api/${resource}`,\n        params,\n      });\n    },\n  \n    updateResourceEntry(resource, data) {\n      return axios({\n        method: 'put',\n        url: `/bc-api/${resource}`,\n        data,\n      });\n    },\n  \n    deleteResourceEntry(resource, data) {\n      return axios({\n        method: 'delete',\n        url: `/bc-api/${resource}`,\n      });\n    },\n  };","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {Spinner} from '../components';\nimport {ApiService} from '../services/ApiService';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isCatalogSummaryLoading: true,\n      isStoreInfoLoading: true,\n      catalogSummary: {},\n      storeInfo: {},\n    };\n  }\n\n  componentWillMount() {\n    ApiService.getResourceEntry('v2/store').then(this.handleStoreInfoResponse.bind(this));\n    ApiService.getResourceEntry('v3/catalog/summary').then(this.handleCatalogSummaryResponse.bind(this));\n  }\n\n  handleStoreInfoResponse(response) {\n    this.setState({\n      isStoreInfoLoading: false,\n      storeInfo: response.data,\n    });\n  }\n\n  handleCatalogSummaryResponse(response) {\n    this.setState({\n      isCatalogSummaryLoading: false,\n      catalogSummary: response.data.data,\n    });\n  }\n\n  render() {\n    const fieldsInSummary = [\n      {\n        label: \"Variant Count\",\n        index: \"variant_count\",\n        format: \"number\",\n      },\n      {\n        label: \"Inventory Count\",\n        index: \"variant_count\",\n        format: \"number\",\n      },\n      {\n        label: \"Inventory Value\",\n        index: \"inventory_value\",\n        format: \"currency\",\n      },\n    ];\n\n    return (\n      <div className=\"container \">\n        <div className=\"row\">\n        <div className=\"col-md-12 m-3\">\n            <div className=\"card\">\n                {/* <div className=\"card-header\">Store Overview</div> */}\n\n                <div className=\"card-body\">\n                  <div className='row'>\n                    <h4 className='col'>Store Overview</h4>\n                    {\n                  (this.state.isStoreInfoLoading || this.state.isCatalogSummaryLoading)\n                  ? \n                  <></>\n                  :\n                  <a href= {this.state.storeInfo.secure_url} className='col-md-3 mr-5 btn  btn-outline-primary'>View Storefront</a> \n                  }\n                  </div>\n                  \n                   <div className='row'>\n                    <h7 className=\"col\">A view into your default BigCommerce storefront</h7>\n                  </div>\n                  {\n                    this.state.isStoreInfoLoading\n                    ? \n                    <Spinner/>\n                    : \n                    <section>\n                      {/* { \n                        this.state.storeInfo.logo.url\n                        ? \n                        <img src={ this.state.storeInfo.logo.url } className=\"img-fluid img-thumbnail\" />\n                        : \n                        <h5>{ this.state.storeInfo.name }</h5>\n                      } */}\n\n                      <ul className=\"list-group m-3\">\n                        <li className=\"list-group-item\">\n                          <div className=\"d-flex w-100 justify-content-between\">\n                            <h5 className=\"mb-1\">Domain</h5>\n                          </div>\n                          <p className=\"mb-1\">{ this.state.storeInfo.domain }</p>\n                        </li>\n                        {/* <li className=\"list-group-item\">\n                          <div className=\"d-flex w-100 justify-content-between\">\n                            <h5 className=\"mb-1\">Secure URL</h5>\n                          </div>\n                          <p className=\"mb-1\">{ this.state.storeInfo.secure_url }</p>\n                        </li> */}\n \n                      </ul>\n\n                    </section>\n                }\n                </div>\n            </div>\n          </div>\n        <div className=\"col-md-12 m-3\">\n            <div className=\"card\">\n              {/* <div className=\"card-header\">Catalog Summary</div> */}\n\n              <div className=\"card-body\">\n                <h4>Catalog Summary</h4>\n                <h7>A simple Overview of your Catalog</h7>\n\n                {\n                  (this.state.isStoreInfoLoading || this.state.isCatalogSummaryLoading)\n                  ?\n                  <Spinner/>\n                  :\n                  <div className=\"row\">\n                    {fieldsInSummary.map(function(summaryItem, index) {\n                      return  <div className=\"col-12 col-lg-6 col-xl\" key={index}>\n                                <div className=\"card\">\n                                  <div className=\"card-body\">\n                                    <div className=\"row align-items-center\">\n                                      <div className=\"col\">\n                                        <h6 className=\"card-title text-uppercase text-muted mb-2\">\n                                          { summaryItem.label }\n                                        </h6>\n                                        <span className=\"h2 mb-0\">\n                                          { \n                                            summaryItem.format === 'currency'\n                                            ?\n                                            new Intl.NumberFormat(undefined, { style: 'currency', currency: this.state.storeInfo.currency }).format(this.state.catalogSummary[summaryItem.index])\n                                            :\n                                            this.state.catalogSummary[summaryItem.index]\n                                          }\n                                        </span>\n                                      </div>\n                                    </div> \n                                  </div>\n                                </div>\n                              </div>\n                      }.bind(this))}\n                  </div>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport {Spinner, Table} from '../components';\nimport {ApiService} from '../services/ApiService';\n\nexport default class List extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOrdersLoading: true,\n      orders: {\n        data: [],\n        pagination: {},\n      },\n      tableHeaders:\n        [\n          {\n            label: \"Order ID\",\n            index: \"id\",\n            callback: function(orderId) {\n              return orderId;\n            },\n          },\n          {\n            label: \"Billing Name\",\n            index: \"billing_address\",\n            callback: function(billingAddress) {\n              return `${billingAddress.first_name} ${billingAddress.last_name}`;\n            },\n          },\n          {\n            label: \"Order Total\",\n            index: \"total_inc_tax\",\n            callback: function(orderTotal) {\n              return orderTotal;\n            },\n          },\n          {\n            label: \"Order Status\",\n            callback: function(data) {\n              let badgeClass = 'badge badge-';\n              if (data.status_id === 5) {\n                badgeClass += 'danger';\n              } else if (data.status_id === 2 || data.status_id === 10) {\n                badgeClass += 'success';\n              } else {\n                badgeClass += 'light';\n              }\n\n              return (\n                <span className={ badgeClass }>{ data.status }</span>\n              );\n            },\n          },\n          {\n            label: \"Actions\",\n            callback: function(data) {\n              if (data.status_id !== 5) {\n                return (\n                  <button type=\"button\" className=\"btn btn-danger\" onClick={(e) => this.cancelOrder(data.id, e)}>Cancel</button>\n                );\n              }\n            }.bind(this),\n          },\n        ],\n    };\n  }\n\n  componentWillMount() {\n    this.loadOrders();\n  }\n\n  loadOrders() {\n    ApiService.getOrders({\n      limit: 5\n    }).then(this.handleOrdersResponse.bind(this));\n  }\n\n  handleOrdersResponse(response) {\n    this.setState({\n      isOrdersLoading: false,\n      orders: {\n        data: response.data\n      }\n    });\n  }\n\n  cancelOrder(orderId) {\n  \tconst newOrderData = { status_id: 5 };\n\n    this.setState({\n      isOrdersLoading: true,\n    });\n  \t\n    ApiService.updateOrder(orderId, newOrderData)\n    .then(this.loadOrders.bind(this));\n  }\n\n  hasOrders() {\n    return (this.state.orders.data.length > 0);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"card\">\n                <h4 className=\"m-4 mb-3\">Orders</h4>\n                {\n                    this.state.isOrdersLoading\n                    ? \n                    <></>\n                    : \n                <h5 className=\"m-4\">{this.state.orders.data.length } Orders</h5>\n                }\n\n                <div className=\"card-body\">\n                  {\n                    this.state.isOrdersLoading\n                    ? \n                    <Spinner/>\n                    :\n                    this.hasOrders()\n                    ? \n                    <section>\n                      <Table striped bordered hover tableHeaders={this.state.tableHeaders} tableData={this.state.orders.data} />\n                    </section>\n                    : \n                    <section>\n                      <div className=\"emptyTable\">No orders exist yet!</div>\n                    </section>\n                  }\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\n\n\n\nimport Home from './screens/home';\nimport ListOfThings from './screens/list';\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');\n</style>\n\n\n\n\nReactDOM.render((\n  <BrowserRouter>\n    <div>\n      <nav className=\"container\" style={{borderColor: '#f3f3f3'}}>\n      <h3 className='mt-5 ml-4'>Sample App</h3>\n\n        <ul className=\"nav mt-2 mb-2 ml-4\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" activeClassName='navgalink' exact to=\"/\" >Summary</NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\"  activeClassName='navgalink' exact to=\"/list\">Orders list</NavLink>\n          </li>\n        </ul>\n      </nav>\n    \n      <Switch>\n        <Route exact path=\"/list\" component={ ListOfThings } />\n        <Route component={ Home } />\n      </Switch>\n    </div>\n  </BrowserRouter>\n), document.getElementById('root'));"],"sourceRoot":""}