{"version":3,"sources":["components/loader.jsx","components/orderList.jsx","components/summary.jsx","components/layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loader","Flex","justifyContent","style","marginTop","ProgressCircle","size","React","Component","alertsManager","createAlertsManager","AddAlert","title","details","type","alert","header","messages","text","onClose","autoDismiss","add","OrderList","useState","currentPage","setCurrentPage","itemsPerPageOptions","itemsPerPage","setItemsPerPage","currentItems","setCurrentItems","loading","setLoading","data","setList","DeleteButton","id","is_deleted","isOpen","setIsOpen","Button","onClick","variant","actionType","Modal","actions","orderId","fetch","method","headers","then","closeOnEscKey","closeOnClickOutside","UpdateButton","status","body","JSON","stringify","status_id","columns","hash","render","billing_address","first_name","last_name","total_tax","Badge","label","orderStatus","useEffect","json","items","maxItems","lastItem","Math","min","length","firstItem","max","slice","AlertsManager","manager","Panel","Table","keyField","itemName","pagination","totalItems","onPageChange","onItemsPerPageChange","newRange","stickyHeader","Summary","store","setStore","catalog","setCatalog","foo","action","window","open","secure_url","Box","backgroundColor","border","borderRadius","padding","domain","Grid","gridColumns","display","fontSize","variant_count","inventory_count","currency_symbol","inventory_value","Layout","activeTab","setActiveTab","height","marginLeft","color","fontWeight","lineHeight","paddingTop","Tabs","onTabClick","marginRight","App","GlobalStyles","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6da69664.chunk.js","sourcesContent":["import React from \"react\";\nimport { Flex, ProgressCircle } from \"@bigcommerce/big-design\";\n\n// Loader Genration\nexport default class Loader extends React.Component {\n  render() {\n    return (\n      <div>\n        <Flex justifyContent=\"center\" style={{ marginTop: \"35vh\" }}>\n          <ProgressCircle size=\"large\" />\n        </Flex>\n      </div>\n    );\n  }\n}\n","import {\n  Button,\n  Table,\n  Panel,\n  Modal,\n  Text,\n  createAlertsManager,\n  AlertsManager,\n  Badge,\n} from \"@bigcommerce/big-design\";\nimport { useState, useEffect } from \"react\";\nimport Loader from \"./loader\";\n\nconst alertsManager = createAlertsManager();\n\n// API GET call to orders\nfunction getList() {\n  return fetch(`/bc-api/v2/orders`).then((data) => data.json());\n}\n\n// API POST call to update orders\nfunction orderUpdate(orderId) {\n  return fetch(`/bc-api/v2/orders/${orderId}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ status_id: 5 }),\n  });\n}\n\n// API DELETE call to delete orders\nfunction orderDelete(orderId) {\n  return fetch(`/bc-api/v2/orders/${orderId}`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n}\n\n// Function for Alerts\nfunction AddAlert(title, details, type) {\n  const alert = {\n    header: title,\n    messages: [\n      {\n        text: details,\n      },\n    ],\n    type: type,\n    onClose: () => null,\n    autoDismiss: true,\n  };\n  return alertsManager.add(alert);\n}\n\n// Function To order status\nfunction orderStatus(status, is_deleted) {\n  if (is_deleted) {\n    return <div></div>;\n  } else {\n    switch (status) {\n      case \"Completed\":\n        return <Badge variant=\"success\" label={status} />;\n        break;\n      case \"Awaiting Fulfillment\":\n        return <Badge variant=\"secondary\" label={status} />;\n        break;\n      case \"Cancelled\":\n        return <Badge variant=\"danger\" label={status} />;\n        break;\n      default:\n        return <Badge variant=\"secondary\" label={status} />;\n    }\n  }\n}\n\nfunction OrderList() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPageOptions] = useState([5, 10, 20, 30]);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentItems, setCurrentItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [data, setList] = useState([]);\n\n  // Function to Generate Delete Alert\n\n  function DeleteAlert() {\n    AddAlert(\"Order Delete\", \"Order Has Been Deleted Successfully!\", \"success\");\n  }\n\n  // Function to Generate Update Alert\n\n  function UpdateAlert() {\n    AddAlert(\n      \"Order Update\",\n      \"Order Has Been Cancelled Successfully!\",\n      \"success\"\n    );\n  }\n  // Function to Generate Delete Button\n\n  function DeleteButton(id, is_deleted) {\n    const [isOpen, setIsOpen] = useState(false);\n\n    if (!is_deleted) {\n      return (\n        <>\n          <Button\n            onClick={() => setIsOpen(true)}\n            variant=\"subtle\"\n            actionType=\"destructive\"\n          >\n            Delete Order\n          </Button>\n\n          <Modal\n            actions={[\n              {\n                text: \"Cancel\",\n                variant: \"subtle\",\n                onClick: () => setIsOpen(false),\n              },\n              {\n                text: \"Delete\",\n                onClick: () =>\n                  orderDelete(id)\n                    .then(setIsOpen(false))\n                    .then(setLoading(true))\n                    .then(DeleteAlert()),\n              },\n            ]}\n            header=\"Warning\"\n            isOpen={isOpen}\n            onClose={() => setIsOpen(false)}\n            closeOnEscKey={true}\n            closeOnClickOutside={false}\n            variant=\"dialog\"\n          >\n            <Text>Do you really want to delete order with id #{id} ?</Text>\n          </Modal>\n        </>\n      );\n    } else {\n      return <div>Order Deleted</div>;\n    }\n  }\n\n  // Function to Generate Update Button\n\n  function UpdateButton(id, status, is_deleted) {\n    const [isOpen, setIsOpen] = useState(false);\n\n    if (status === \"Cancelled\" || status === \"Completed\" || is_deleted) {\n      return <div></div>;\n    } else {\n      return (\n        <>\n          <Button onClick={() => setIsOpen(true)} actionType=\"destructive\">\n            Cancel\n          </Button>\n\n          <Modal\n            actions={[\n              {\n                text: \"Cancel\",\n                variant: \"subtle\",\n                onClick: () => setIsOpen(false),\n              },\n              {\n                text: \"Delete\",\n                onClick: () =>\n                  orderUpdate(id)\n                    .then(setIsOpen(false))\n                    .then(setLoading(true))\n                    .then(UpdateAlert()),\n              },\n            ]}\n            header=\"Warning\"\n            isOpen={isOpen}\n            onClose={() => setIsOpen(false)}\n            closeOnEscKey={true}\n            closeOnClickOutside={false}\n            variant=\"dialog\"\n          >\n            <Text>Are you sure you want to Cancel this order?</Text>\n          </Modal>\n        </>\n      );\n    }\n  }\n\n  const columns = [\n    { header: \"Order Id\", hash: \"id\", render: ({ id }) => id },\n    {\n      header: \"Billing Name\",\n      hash: \"billing_address\",\n      render: ({ billing_address }) =>\n        `${billing_address.first_name} ${billing_address.last_name}`,\n    },\n    {\n      header: \"Order Total\",\n      hash: \"total_tax\",\n      render: ({ total_tax }) => total_tax,\n    },\n    {\n      header: \"Order Status\",\n      hash: \"custom_status\",\n      render: ({ status, is_deleted }) => orderStatus(status, is_deleted),\n    },\n    {\n      header: \"\",\n      hash: \"update\",\n      render: ({ id, status, is_deleted }) =>\n        UpdateButton(id, status, is_deleted),\n    },\n    {\n      header: \"\",\n      hash: \"delete\",\n      render: ({ id, is_deleted }) => DeleteButton(id, is_deleted),\n    },\n  ];\n\n  const onItemsPerPageChange = (newRange) => {\n    setCurrentPage(1);\n    setItemsPerPage(newRange);\n  };\n\n  useEffect(() => {\n    getList()\n      .then((items) => {\n        setList(items);\n        const maxItems = currentPage * itemsPerPage;\n        const lastItem = Math.min(maxItems, items.length);\n        const firstItem = Math.max(0, maxItems - itemsPerPage);\n        setCurrentItems(items.slice(firstItem, lastItem));\n      })\n      .then(() => setLoading(false));\n  }, [currentPage, itemsPerPage, loading]);\n\n  return (\n    <>\n      <AlertsManager manager={alertsManager} />\n      {loading ? (\n        <Loader />\n      ) : (\n        <Panel header=\"Orders \">\n          <Table\n            keyField=\"sku\"\n            columns={columns}\n            items={currentItems}\n            itemName=\"Orders\"\n            pagination={{\n              currentPage,\n              totalItems: data.length,\n              onPageChange: setCurrentPage,\n              itemsPerPageOptions,\n              onItemsPerPageChange,\n              itemsPerPage,\n            }}\n            stickyHeader\n          />\n        </Panel>\n      )}\n    </>\n  );\n}\n\nexport default OrderList;\n","import { Panel, Text, Box, Grid } from \"@bigcommerce/big-design\";\nimport { useState, useEffect } from \"react\";\nimport Loader from \"./loader\";\n\n// API Get Request to store\nfunction getStore() {\n  return fetch(\"/bc-api/v2/store\").then((store) => store.json());\n}\n// API Get Request to store Summary\nfunction getCatalog() {\n  return fetch(\"/bc-api/v3/catalog/summary\").then((store) => store.json());\n}\n\nexport default function Summary() {\n  const [store, setStore] = useState([]);\n  const [catalog, setCatalog] = useState([]);\n\n  useEffect(() => {\n    getStore().then((foo) => {\n      setStore(foo);\n    });\n\n    getCatalog().then((foo) => {\n      setCatalog(foo);\n    });\n  }, [store.id, catalog.id]);\n\n  return (\n    <>\n      {store.length === 0 ? (\n        <Loader />\n      ) : (\n        <Panel\n          header=\"Store Overview\"\n          action={{\n            variant: \"secondary\",\n            text: \"View Storefront\",\n            onClick: () => {\n              window.open(store.secure_url);\n            },\n          }}\n        >\n          <Box\n            backgroundColor=\"white\"\n            border=\"box\"\n            borderRadius=\"normal\"\n            padding=\"medium\"\n          >\n            <Text>Domain</Text>\n            <p>{store.domain}</p>\n          </Box>\n        </Panel>\n      )}\n\n      {catalog.data && (\n        <Panel header=\"Catalog Summary\">\n          <p>A simple overview of your catalog.</p>\n\n          <Grid gridColumns=\"repeat(3, 1fr)\">\n            <Box\n              backgroundColor=\"white\"\n              border=\"box\"\n              borderRadius=\"normal\"\n              padding=\"medium\"\n              display=\"inline\"\n            >\n              <Text>VARIANT COUNT</Text>\n              <p style={{ fontSize: \"2rem\" }}>{catalog.data.variant_count}</p>\n            </Box>\n            <Box\n              backgroundColor=\"white\"\n              border=\"box\"\n              borderRadius=\"normal\"\n              padding=\"medium\"\n              display=\"inline\"\n            >\n              <Text>INVENTORY COUNT</Text>\n              <p style={{ fontSize: \"2rem\" }}>{catalog.data.inventory_count}</p>\n            </Box>\n            <Box\n              backgroundColor=\"white\"\n              border=\"box\"\n              borderRadius=\"normal\"\n              padding=\"medium\"\n              display=\"inline\"\n            >\n              <Text>INVENTORY VALUE</Text>\n              <p style={{ fontSize: \"2rem\" }}>\n                {catalog.currency_symbol} {catalog.data.inventory_value}\n              </p>\n            </Box>\n          </Grid>\n        </Panel>\n      )}\n    </>\n  );\n}\n","import { Tabs, Box } from \"@bigcommerce/big-design\";\nimport { useState } from \"react\";\nimport OrderList from \"./orderList\";\nimport Summary from \"./summary\";\n\nfunction Layout() {\n  const [activeTab, setActiveTab] = useState(\"tab1\");\n\n  const items = [\n    { id: \"tab1\", title: \"Summary\" },\n    { id: \"tab2\", title: \"Order List\" },\n  ];\n\n  return (\n    <div style={{ backgroundColor: \"#F6F7F9\", height: \"100vh\" }}>\n      <div style={{ marginLeft: \"50px\" }}>\n        <h1\n          style={{\n            color: \"#313440\",\n            fontSize: \"1.5rem\",\n            fontWeight: 400,\n            lineHeight: \"2rem\",\n            marginTop: \"0\",\n            paddingTop: \"16px\",\n          }}\n        >\n          Sample App\n        </h1>\n      </div>\n      <div style={{ marginLeft: \"50px\" }}>\n        <Tabs activeTab={activeTab} items={items} onTabClick={setActiveTab} />\n      </div>\n      <div style={{ marginLeft: \"50px\", marginRight: \"50px\" }}>\n        <Box marginTop=\"large\">\n          {activeTab === \"tab1\" && <Summary />}\n          {activeTab === \"tab2\" && <OrderList />}\n        </Box>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import {  GlobalStyles } from '@bigcommerce/big-design';\nimport Layout from './components/layout'\n\nfunction App() {\n  return (\n    <>\n    <GlobalStyles />\n    <Layout />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}