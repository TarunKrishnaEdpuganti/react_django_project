{"version":3,"sources":["components/loader.jsx","components/orderList.jsx","components/summary.jsx","components/layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","React","Component","alertsManager","createAlertsManager","AddAlert","title","details","type","alert","header","messages","text","onClose","autoDismiss","add","OrderList","useState","currentPage","setCurrentPage","itemsPerPageOptions","itemsPerPage","setItemsPerPage","currentItems","setCurrentItems","loading","setLoading","data","setList","DeleteButton","id","is_deleted","isOpen","setIsOpen","Button","onClick","variant","actionType","Modal","actions","orderId","fetch","method","headers","then","closeOnEscKey","closeOnClickOutside","UpdateButton","status","body","JSON","stringify","status_id","columns","hash","render","billing_address","first_name","last_name","total_tax","Badge","label","orderStatus","useEffect","json","items","maxItems","lastItem","Math","min","length","firstItem","max","slice","AlertsManager","manager","Panel","Table","keyField","itemName","pagination","totalItems","onPageChange","onItemsPerPageChange","newRange","stickyHeader","Summary","store","setStore","catalog","setCatalog","foo","action","window","open","secure_url","domain","Flex","justifyContent","variant_count","inventory_count","inventory_value","Layout","activeTab","setActiveTab","style","Tabs","onTabClick","Box","marginTop","App","GlobalStyles","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1a62470.chunk.js","sourcesContent":["import React from 'react';\nimport './loader.css'\n\nexport default class Loader extends React.Component {\n  render() {\n    return (\n      <div className=\"loader\"></div>\n    );\n  }\n}","import { Button, Table, Panel, Modal , Text, createAlertsManager , AlertsManager, Badge } from \"@bigcommerce/big-design\";\nimport { useState, useEffect } from \"react\";\nimport Loader from \"./loader\";\n\nconst alertsManager = createAlertsManager()\n\nfunction getList() {\n    return fetch(`/bc-api/v2/orders`)\n    .then(data => data.json())\n} \n\nfunction orderUpdate(orderId){\n  return fetch(`/bc-api/v2/orders/${orderId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ status_id: 5 }),\n  })\n}\n\nfunction orderDelete(orderId){\n  return fetch(`/bc-api/v2/orders/${orderId}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n}\n\n\nfunction AddAlert(title, details, type) {\n  const alert = {\n    header: title,\n    messages: [\n      {\n        text: details,\n      },\n    ],\n    type: type,\n    onClose: () => null,\n    autoDismiss: true\n  }\n  return(alertsManager.add(alert))\n}\n\n\n\n\nfunction orderStatus(status, is_deleted){\n  if(is_deleted){\n    return(\n    <div></div>\n    )\n  }else{\n    switch(status) {\n      case 'Completed':\n        return (<Badge variant=\"success\" label={status}/>)\n        break;\n      case 'Awaiting Fulfillment':\n        return (<Badge variant=\"secondary\" label={status}/>)\n        break;\n      case 'Cancelled':\n        return (<Badge variant=\"danger\" label={status}/>)\n        break;\n      default:\n        return (<Badge variant=\"secondary\" label={status}/>)\n    }\n  }\n}\n\n\nfunction OrderList() {\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPageOptions] = useState([5, 10, 20, 30]);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentItems, setCurrentItems] = useState([]);\n  const [loading, setLoading] = useState(true)\n  const [data, setList] = useState([]);\n\n\n  function DeleteAlert(){\n    AddAlert('Order Delete', 'Order Has Been Deleted Successfully!', 'success')\n  }\n  function UpdateAlert(){\n    AddAlert('Order Update', 'Order Has Been Cancelled Successfully!', 'success')\n  }\n\n\n  function DeleteButton(id ,is_deleted) {\n    const [isOpen, setIsOpen] = useState(false);\n\n    if(!is_deleted){\n      return (\n        // <Button variant=\"subtle\" actionType=\"destructive\" onClick={() => orderUpdate(id).then(setLoading(true))} >Cancel</Button>\n      <>\n        <Button onClick={() => setIsOpen(true)} variant=\"subtle\" actionType=\"destructive\">Delete Order</Button>\n\n        <Modal\n          actions={[\n            { text: 'Cancel', variant: 'subtle', onClick: () => setIsOpen(false) },\n            { text: 'Delete', onClick: () =>  orderDelete(id).then(setIsOpen(false)).then(setLoading(true)).then(DeleteAlert())},\n          ]}\n          header=\"Warning\"\n          isOpen={isOpen}\n          onClose={() => setIsOpen(false)}\n          closeOnEscKey={true}\n          closeOnClickOutside={false}\n          variant=\"dialog\"\n        >\n          <Text>\n          Do you really want to delete order with id #{id} ?\n          </Text>\n        </Modal>\n      </>\n      )\n    }\n    else{\n      return <div>Order Deleted</div>\n    }\n  }\n\n  \n  function UpdateButton(id ,status , is_deleted){\n    const [isOpen, setIsOpen] = useState(false);\n\n    if(status === 'Cancelled' || status === 'Completed' || is_deleted){\n      return(\n        <div></div>\n      )\n    }else{\n      return(\n        <>\n          {/* <Button actionType=\"destructive\" onClick={() => orderUpdate(id).then(setLoading(true))} >Cancel</Button> */}\n          <Button onClick={() => setIsOpen(true)} actionType=\"destructive\">Cancel</Button>\n\n          <Modal\n            actions={[\n              { text: 'Cancel', variant: 'subtle', onClick: () => setIsOpen(false) },\n              { text: 'Delete', onClick: () =>  orderUpdate(id).then(setIsOpen(false)).then(setLoading(true)).then(UpdateAlert())},\n            ]}\n            header=\"Warning\"\n            isOpen={isOpen}\n            onClose={() => setIsOpen(false)}\n            closeOnEscKey={true}\n            closeOnClickOutside={false}\n            variant=\"dialog\"\n          >\n            <Text>\n            Are you sure you want to Cancel this order?\n            </Text>\n          </Modal>\n        </>\n      )\n    }\n  }\n\n  const columns=[\n      { header: 'Order Id', hash: 'id', render: ({ id }) => id },\n      { header: 'Billing Name', hash: 'billing_address', render: ({ billing_address }) =>`${ billing_address.first_name} ${billing_address.last_name}` },\n      { header: 'Order Total', hash: 'total_tax', render: ({ total_tax }) => total_tax },\n      { header: 'Order Status', hash: 'custom_status', render: ({ status, is_deleted}) => orderStatus(status, is_deleted) },\n      { header: '', hash: 'stock', render: ({ id ,status, is_deleted}) => UpdateButton(id ,status, is_deleted)},\n      { header: '', hash: 'stockmm', render: ({ id , is_deleted}) => DeleteButton(id , is_deleted)  },\n    ]\n\n        \n\n  const onItemsPerPageChange = (newRange) => {\n    setCurrentPage(1);\n    setItemsPerPage(newRange);\n  };\n\n\n  useEffect(() => {\n  getList().then(items => {\n      setList(items);\n      const maxItems = currentPage * itemsPerPage;\n      const lastItem = Math.min(maxItems, items.length);\n      const firstItem = Math.max(0, maxItems - itemsPerPage);\n      setCurrentItems(items.slice(firstItem, lastItem));\n  }).then(() => setLoading(false))\n  }, [currentPage, itemsPerPage, loading]);\n\n  return (\n    <>\n    <AlertsManager manager={alertsManager} />\n    {\n      loading ? <Loader />\n        :\n      <Panel header=\"Orders \">\n        <Table\n          keyField=\"sku\"\n          columns={columns}\n          items={currentItems}\n          itemName=\"Orders\"\n          pagination={{\n            currentPage,\n            totalItems: data.length,\n            onPageChange: setCurrentPage,\n            itemsPerPageOptions,\n            onItemsPerPageChange,\n            itemsPerPage,\n          }}\n          stickyHeader\n        />\n      </Panel>\n    }\n  </>\n  \n  );}\n  \n\n  export default OrderList;","import { Panel, Text, Flex, H2 } from \"@bigcommerce/big-design\";\nimport { useState, useEffect } from \"react\";\nimport Loader from \"./loader\";\n\nfunction getStore() {\n    return fetch('/bc-api/v2/store')\n      .then(store => store.json())\n} \n\nfunction getCatalog() {\n    return fetch('/bc-api/v3/catalog/summary')\n      .then(store => store.json())\n} \n\n\n\nexport default function  Summary() {\n    const [store, setStore] = useState([]);\n    const [catalog, setCatalog] = useState([]);\n\n\n    useEffect(() => {\n        getStore().then(foo => {\n            setStore(foo);\n            // console.log(foo)\n\n        })\n\n\n        getCatalog().then(foo => {\n            setCatalog(foo);\n            // console.log(foo)\n        })\n\n    }, [store.id, catalog.id])\n\n    return(\n        <>\n        { store.length  === 0 ? \n            <Loader />\n            :\n            <Panel\n            header=\"Stor Overview\"\n            action={{\n            variant: 'secondary',\n            text: 'View Storefront',\n            onClick: () => {\n                window.open(store.secure_url)\n            },\n            }}\n            >\n            <Panel>\n                <Text>Domain</Text>\n                {store.domain}\n            </Panel>\n            </Panel>\n            }\n\n            { catalog.data &&\n\n            <Panel header=\"Catalog Summary\">\n                <Flex justifyContent='space-between'>\n                    <Panel>\n                        <Text>VARIANT COUNT</Text>\n                        <H2>{catalog.data.variant_count}</H2>\n                    </Panel>\n                    <Panel>\n                        <Text>INVENTORY COUNT</Text>\n                        <H2>{catalog.data.inventory_count}</H2>\n                    </Panel>\n                    <Panel>\n                        <Text>INVENTORY VALUE</Text>\n                        <H2>{catalog.data.inventory_value}</H2>\n                    </Panel>\n                </Flex>\n            </Panel> \n \n            }\n        </>\n    )\n}","import { Tabs, Box, H0 } from \"@bigcommerce/big-design\";\nimport { useState } from \"react\";\nimport OrderList from \"./orderList\";\nimport Summary from \"./summary\";\n\n\n\n\nfunction  Layout() {\n  const [activeTab, setActiveTab] = useState('tab1');\n\n  const items = [\n    { id: 'tab1', title: 'Summary' },\n    { id: 'tab2', title: 'Order List' },      \n  ];\n\n  return (\n    <div style={{'margin': '2% 25%'}}>\n      <H0>Inventory Management App</H0>\n      <Tabs activeTab={activeTab} items={items} onTabClick={setActiveTab} />\n      <Box marginTop=\"large\">\n        {activeTab === 'tab1' && <Summary />}\n        {activeTab === 'tab2' && <OrderList />}\n      </Box>\n    </div>\n  );\n}\n\nexport default Layout","import {  GlobalStyles } from '@bigcommerce/big-design';\nimport Layout from './components/layout'\n\nfunction App() {\n  return (\n    <>\n    <GlobalStyles />\n    <Layout />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}