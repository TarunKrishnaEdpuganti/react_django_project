{"version":3,"sources":["components/loader.jsx","components/orderList.jsx","components/summary.jsx","components/layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["React","Component","OrderList","useState","currentPage","setCurrentPage","itemsPerPageOptions","itemsPerPage","setItemsPerPage","currentItems","setCurrentItems","loading","setLoading","data","setList","columns","header","hash","render","id","billing_address","first_name","last_name","total_tax","custom_status","Button","onClick","orderId","fetch","method","headers","body","JSON","stringify","status_id","then","useEffect","json","items","maxItems","lastItem","Math","min","length","firstItem","max","slice","Table","keyField","itemName","pagination","totalItems","onPageChange","onItemsPerPageChange","newRange","stickyHeader","Summary","store","setStore","catalog","setCatalog","foo","console","log","Panel","action","variant","text","domain","Flex","justifyContent","variant_count","inventory_count","inventory_value","Layout","activeTab","setActiveTab","style","Tabs","title","onTabClick","Box","marginTop","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1be09295.chunk.js","sourcesContent":["import React from 'react';\nimport './loader.css'\n\nexport default class Loader extends React.Component {\n  render() {\n    return (\n      <div className=\"loader\"></div>\n    );\n  }\n}","import { Button, Table } from \"@bigcommerce/big-design\";\nimport { useState, useEffect } from \"react\";\nimport Loader from \"./loader\";\n\n\nfunction getList() {\n    return fetch('/bc-api/v2/orders')\n      .then(data => data.json())\n} \n\n\n\nfunction orderUpdate(orderId){\n  return fetch(`/bc-api/v2/orders/${orderId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ status_id: 5 }),\n  })\n}\n\n\n\n\nfunction OrderList() {\n\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [itemsPerPageOptions] = useState([5, 10, 20, 30]);\n    const [itemsPerPage, setItemsPerPage] = useState(5);\n    const [currentItems, setCurrentItems] = useState([]);\n    const [loading, setLoading] = useState(true)\n    const [data, setList] = useState([]);\n\n    const columns=[\n        { header: 'Order Id', hash: 'id', render: ({ id }) => id },\n        { header: 'Billing Name', hash: 'billing_address', render: ({ billing_address }) =>`${ billing_address.first_name} ${billing_address.last_name}` },\n        { header: 'Order Total', hash: 'total_tax', render: ({ total_tax }) => total_tax },\n        { header: 'Order Status', hash: 'custom_status', render: ({ custom_status }) => custom_status },\n        { header: 'Action', hash: 'stock', render: ({ id }) => <Button onClick={() => orderUpdate(id).then(setLoading(true))} >Cancel</Button> },\n    ]\n\n        \n\n    const onItemsPerPageChange = (newRange) => {\n      setCurrentPage(1);\n      setItemsPerPage(newRange);\n    };\n\n  \n    useEffect(() => {\n    getList().then(items => {\n        setList(items);\n        const maxItems = currentPage * itemsPerPage;\n        const lastItem = Math.min(maxItems, items.length);\n        const firstItem = Math.max(0, maxItems - itemsPerPage);\n        setCurrentItems(items.slice(firstItem, lastItem));\n    }).then(setLoading(false))\n    }, [currentPage, itemsPerPage, loading]);\n  \n    return (\n\n      <Table\n        keyField=\"sku\"\n        columns={columns}\n        items={currentItems}\n        itemName=\"Orders\"\n        pagination={{\n          currentPage,\n          totalItems: data.length,\n          onPageChange: setCurrentPage,\n          itemsPerPageOptions,\n          onItemsPerPageChange,\n          itemsPerPage,\n        }}\n        stickyHeader\n      />\n      \n    );\n  }\n  \n\n  export default OrderList;","import { Panel, Text, Flex } from \"@bigcommerce/big-design\";\nimport { useState, useEffect } from \"react\";\n\nfunction getStore() {\n    return fetch('/bc-api/v2/store')\n      .then(store => store.json())\n} \n\nfunction getCatalog() {\n    return fetch('/bc-api/v3/catalog/summary')\n      .then(store => store.json())\n} \n\n\n\nexport default function  Summary() {\n    const [store, setStore] = useState([]);\n    const [catalog, setCatalog] = useState([]);\n\n\n    useEffect(() => {\n        getStore().then(foo => {\n            setStore(foo);\n        })\n\n\n        getCatalog().then(foo => {\n            setCatalog(foo);\n            console.log(foo)\n        })\n\n    }, [store.id, catalog.id])\n\n    return(\n        <>\n        { store.length > 0 ? \n            <Text>Loding</Text>\n            :\n            <Panel\n            header=\"Stor Overview\"\n            action={{\n            variant: 'secondary',\n            text: 'View Storefront',\n            onClick: () => {\n            // Do some action\n            },\n            }}\n            >\n            <Panel>\n                <Text>Domain</Text>\n                {store.domain}\n            </Panel>\n            </Panel>\n            }\n\n            { catalog.data &&\n\n            <Panel header=\"Catalog Summary\">\n                <Flex justifyContent='space-between'>\n                    <Panel>\n                        <Text>VARIANT COUNT</Text>\n                        {catalog.data.variant_count}\n                    </Panel>\n                    <Panel>\n                        <Text>INVENTORY COUNT</Text>\n                        {catalog.data.inventory_count}\n                    </Panel>\n                    <Panel>\n                        <Text>INVENTORY VALUE</Text>\n                        {catalog.data.inventory_value}\n                    </Panel>\n                </Flex>\n            </Panel> \n \n            }\n        </>\n    )\n}","import { Tabs, Box } from \"@bigcommerce/big-design\";\nimport { useState } from \"react\";\nimport OrderList from \"./orderList\";\nimport Summary from \"./summary\";\n\n\n\n\nfunction  Layout() {\n  const [activeTab, setActiveTab] = useState('tab1');\n\n  const items = [\n    { id: 'tab1', title: 'Summary' },\n    { id: 'tab2', title: 'Order List' },      \n  ];\n\n  return (\n    <div style={{'margin': '2% 25%'}}>\n      <Tabs activeTab={activeTab} items={items} onTabClick={setActiveTab} />\n      <Box marginTop=\"large\">\n        {activeTab === 'tab1' && <Summary />}\n        {activeTab === 'tab2' && <OrderList />}\n      </Box>\n    </div>\n  );\n}\n\nexport default Layout","\nimport Layout from './components/layout'\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}